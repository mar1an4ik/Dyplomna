{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["getArray","size","Object","keys","dataJson","length","data","i","push","label","value","getFeeds","feeds","title","BarChart","props","onSubmit","rad","document","getElementsByName","checked","cell","myChart","options","scales","xAxes","ticks","maxTicksLimit","sizeData","yAxes","stepSize","update","onSubmitRed","cheker","getElementById","get2Array","datasets","pointBorderColor","gridLines","color","aproximate","massX","massY","n","sumMassX","sumMassY","sumMultXonY","sumDoubleX","a","b","Math","floor","newMassY","massXnew","ada","bda","canvasRef","React","createRef","canvasRef2","this","Chart","current","type","min","labels","map","d","dataMain","console","log","newData","sum","max","ceil","sum2","sum3","get3Array","sum4","get4Array","sum5","get5Array","sum6","get6Array","ln1st","ln2nd","elems","getElementsByClassName","innerHTML","drawGraphic","ln2ndAproximated","drawGraphicAprox","getFormula","k","element","element2","element3","abs","ctx","responsive","maintainAspectRatio","elem","ctx2","className","onClick","showSum","id","ref","name","onChange","Component","App","state","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2c0e85df.chunk.js","sourcesContent":["import {Chart} from 'react-chartjs-2';\nimport React from 'react';\nimport './App.css'\nimport dataJson from './data2'\n\n//показник герста,фрактальна константа,фрактальна розмірність,chart.js\n\nfunction getSize() {\n    let size = Object.keys(dataJson).length;\n    return size;\n}\n\nfunction getArray() {\n    let size = Object.keys(dataJson).length;\n    let data = [];\n    for (var i = 0; i < size - 1; i++) {\n        data.push({\n            label: i,\n            value: dataJson[i],\n        });\n    }\n    return data;\n}\n\nfunction getFeeds() {\n    let feeds = [];\n\n    feeds.push({\n        title: '1',\n        data: getArray()\n    });\n\n\n    return feeds;\n}\n\n\nclass BarChart extends React.Component {\n    constructor(props) {\n\n        super(props);\n        this.sizeData = props.size;\n        this.canvasRef = React.createRef();\n        this.canvasRef2 = React.createRef();\n\n    }\n\n    componentDidMount() {\n\n        this.myChart = new Chart(this.canvasRef.current, {\n            type: 'line',\n\n            options: {\n\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            min: 1,\n                            stepSize: 100 // this worked as expected\n                        },\n\n\n                    }],\n                    xAxes: [{\n\n                        ticks: {\n\n                            stepSize: 15,\n                            min: 1,\n                            maxTicksLimit: this.props.data.length,\n\n                        },\n\n\n                    }]\n                }\n            },\n\n\n            data: {\n                labels: this.props.data.map(d => d.label),\n                datasets: [{\n                    label: this.props.title,\n                    data: this.props.data.map(d => d.value),\n\n                }]\n            }\n        });\n\n    };\n\n    get2Array(dataMain) {\n\n        console.log(\"There are 2 klitunok:\");\n        let data = dataMain;\n        let newData = [];\n        let sum = 0;\n        newData[0] = 2;\n\n        for (let i = 1; i < data.length - 1; i++) {\n            newData.push((Math.max(data[i].value, data[i + 1].value) - Math.min(data[i].value, data[i + 1].value)) / 2)\n            console.log(newData[i])\n        }\n        for (let i = 2; i < newData.length; i += 2) {\n            if (i >= newData.length - 2) {\n\n                sum += newData[i]\n                break;\n            }\n\n            sum += newData[i]\n\n        }\n        return ({\n            ceil: 2,\n            sum: sum,\n        });\n\n    }\n\n    get3Array(dataMain) {\n\n        console.log(\"There are 3 klitunok:\");\n        let data = dataMain;\n        let newData = [];\n        let sum = 0;\n        newData[0] = 3;\n\n        for (let i = 1; i < data.length - 1; i++) {\n            if (i == data.length - 2) {\n                newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value) - Math.min(data[i].value, data[i + 1].value)) / 3) * 100)) / 100);\n                continue;\n            }\n            newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value, data[i + 2].value) - Math.min(data[i].value, data[i + 1].value, data[i + 2].value)) / 3) * 100)) / 100);\n            console.log(newData[i])\n        }\n        for (let i = 3; i < newData.length; i += 3) {\n            if (i >= newData.length - 3) {\n\n                sum += newData[i]\n                break;\n            }\n\n            sum += newData[i]\n\n        }\n        return ({\n            ceil: 4,\n            sum: sum,\n        });\n    }\n\n    get4Array(dataMain) {\n\n        console.log(\"There are 4 klitunok:\");\n        let data = dataMain;\n        let newData = [];\n        let sum = 0;\n        newData[0] = 4;\n        for (let i = 1; i < data.length - 1; i++) {\n            if (i >= data.length - 3) {\n                if (i >= data.length - 2) {\n                    newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value) - Math.min(data[i].value, data[i + 1].value)) / 4) * 100)) / 100);\n                    continue;\n                }\n                newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value, data[i + 2].value) - Math.min(data[i].value, data[i + 1].value, data[i + 2].value)) / 4) * 100)) / 100);\n                continue;\n            }\n\n            newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value, data[i + 2].value, data[i + 3].value) - Math.min(data[i].value, data[i + 1].value, data[i + 2].value, data[i + 3].value)) / 4) * 100)) / 100);\n            console.log(newData[i])\n        }\n        for (let i = 4; i < newData.length; i += 4) {\n            if (i >= newData.length - 4) {\n                sum += newData[i];\n                break;\n            }\n            sum += newData[i]\n\n        }\n        return ({\n            ceil: 6,\n            sum: sum,\n        });\n    }\n\n    get5Array(dataMain) {\n\n        console.log(\"There are 5 klitunok:\");\n        let data = dataMain;\n        let newData = [];\n        newData[0] = 5;\n        let sum = 0;\n        for (let i = 1; i < data.length - 1; i++) {\n            if (i >= data.length - 4) {\n                if (i >= data.length - 3) {\n                    if (i >= data.length - 2) {\n                        newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value) - Math.min(data[i].value, data[i + 1].value)) / 5) * 100)) / 100);\n                        continue\n                    }\n                    newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value, data[i + 2].value) - Math.min(data[i].value, data[i + 1].value, data[i + 2].value)) / 5) * 100)) / 100);\n                    continue;\n                }\n                newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value, data[i + 2].value, data[i + 3].value) - Math.min(data[i].value, data[i + 1].value,\n                    data[i + 2].value, data[i + 3].value)) / 5) * 100)) / 100);\n                continue;\n            }\n\n            newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value, data[i + 2].value, data[i + 3].value, data[i + 4].value) - Math.min(data[i].value,\n                data[i + 1].value, data[i + 2].value, data[i + 3].value, data[i + 4].value)) / 5) * 100)) / 100);\n            console.log(newData[i])\n        }\n        for (let i = 5; i < newData.length; i += 5) {\n            if (i >= newData.length - 5) {\n                sum += newData[i];\n                break;\n            }\n\n            sum += newData[i]\n\n        }\n\n        return ({\n            ceil: 5,\n            sum: sum,\n        });\n\n    }\n\n    get6Array(dataMain) {\n        console.log(\"There are 6 klitunok:\");\n        let data = dataMain;\n        let newData = [];\n        let sum = 0;\n        newData[0] = 5;\n        for (let i = 1; i < data.length - 1; i++) {\n            if (i >= data.length - 5) {\n                if (i >= data.length - 4) {\n                    if (i >= data.length - 3) {\n                        if (i >= data.length - 2) {\n                            newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value) - Math.min(data[i].value,\n                                data[i + 1].value)) / 6) * 100)) / 100);\n                            continue\n                        }\n                        newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value, data[i + 2].value) - Math.min(data[i].value,\n                            data[i + 1].value, data[i + 2].value)) / 6) * 100)) / 100);\n                        continue;\n                    }\n                    newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value, data[i + 2].value,\n                        data[i + 3].value) - Math.min(data[i].value, data[i + 1].value, data[i + 2].value,\n                        data[i + 3].value)) / 6) * 100)) / 100);\n                    continue;\n                }\n                newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value, data[i + 2].value, data[i + 3].value,\n                    data[i + 4].value) - Math.min(data[i].value, data[i + 1].value, data[i + 2].value,\n                    data[i + 3].value, data[i + 4].value)) / 6) * 100)) / 100);\n\n                continue;\n                console.log(newData[i])\n\n            }\n\n            newData.push((Math.floor(((Math.max(data[i].value, data[i + 1].value, data[i + 2].value, data[i + 3].value,\n                data[i + 4].value, data[i + 5].value) - Math.min(data[i].value, data[i + 1].value, data[i + 2].value, data[i + 3].value,\n                data[i + 4].value, data[i + 5].value)) / 6) * 100)) / 100);\n            console.log(newData[i])\n        }\n        for (let i = 6; i < newData.length; i += 6) {\n            if (i >= newData.length - 6) {\n                sum += newData[i]\n                break;\n            }\n\n            sum += newData[i]\n\n        }\n\n        return ({\n            ceil: 6,\n            sum: sum,\n        });\n    }\n\n    showSum(data) {\n        let sum2 = Math.floor(this.get2Array(data).sum * 100) / 100;\n        let sum3 = Math.floor(this.get3Array(data).sum * 100) / 100;\n        let sum4 = Math.floor(this.get4Array(data).sum * 100) / 100;\n        let sum5 = Math.floor(this.get5Array(data).sum * 100) / 100;\n        let sum6 = Math.floor(this.get6Array(data).sum * 100) / 100;\n        let ln1st = [Math.floor(Math.log(2)*100)/100, Math.floor(Math.log(3)*100)/100,Math.floor(Math.log(4)*100)/100,\n            Math.floor(Math.log(5)*100)/100, Math.floor(Math.log(6)*100)/100];\n\n        let ln2nd = [Math.floor(Math.log(sum2) * 100) / 100, Math.floor(Math.log(sum3) * 100) / 100, Math.floor(Math.log(sum4) * 100) / 100,\n            Math.floor(Math.log(sum5) * 100) / 100, Math.floor(Math.log(sum6) * 100) / 100];\n\n        let elems = document.getElementsByClassName(\"ceil\")\n        elems[0].innerHTML += \" \" + sum2+\"|| Log(\"+sum2+\") = \"+ln2nd[0]+\"|| Log(2) = \"+ln1st[0];\n        elems[1].innerHTML += \" \" + sum3+\"|| Log(\"+sum3+\") = \"+ln2nd[1]+\"|| Log(3) = \"+ln1st[1];\n        elems[2].innerHTML += \" \" + sum4+\"|| Log(\"+sum4+\") = \"+ln2nd[2]+\"|| Log(4) = \"+ln1st[2];\n        elems[3].innerHTML += \" \" + sum5+\"|| Log(\"+sum5+\") = \"+ln2nd[3]+\"|| Log(5) = \"+ln1st[3];\n        elems[4].innerHTML += \" \" + sum6+\"|| Log(\"+sum6+\") = \"+ln2nd[4]+\"|| Log(6) = \"+ln1st[4];\n\n        this.drawGraphic(ln1st,ln2nd);\n        let ln2ndAproximated=this.aproximate(ln1st,ln2nd);\n\n\n        this.drawGraphicAprox(ln2ndAproximated.massXnew,ln2ndAproximated.newMassY);\n        this.getFormula(ln2ndAproximated.ada,ln2ndAproximated.bda)\n\n\n        return (0)\n    }\n\n    getFormula(k,b){\n\n        let element=document.getElementsByClassName(\"formula\")\n        let element2=document.getElementsByClassName(\"fraktal\")\n        let element3=document.getElementsByClassName(\"herst\")\n        let element4=document.getElementsByClassName(\"constanta\")\n        element[0].innerHTML+=(\" y=\"+k+\"x+\"+b);\n        element2[0].innerHTML+=(Math.abs(k));\n        element3[0].innerHTML+=(2-Math.abs(k));\n\n\n    }\n\n    drawGraphic(massX,massY){\n            let ctx = document.getElementById(\"MyChart2\");\n            let lineChart = new Chart(ctx, {\n                type: 'line',\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n\n                                stepSize: 0.5 // this worked as expected\n                            },\n\n\n                        }]}},\n                data: {\n                    labels: massX.map((elem)=>elem),\n                    datasets: [{\n                        label: \"Графік в подвійному логарифмічному масштабі\",\n                        data: massY.map((elem)=>elem)\n                    }]\n                }\n            })\n\n    }\n\n    drawGraphicAprox(massX,massY){\n            let ctx2=document.getElementById(\"MyChartAprox\")\n            let lineChart = new Chart(ctx2, {\n                type: 'line',\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n\n                                stepSize: 0.1 // this worked as expected\n                            },\n\n\n                        }],\n\n                    }},\n                data: {\n                    labels: massX.map((elem)=>elem),\n                    datasets: [{\n                        label: \"Апроксимація фрактальних значень.\",\n                        data: massY.map((elem)=>elem)\n                    }]\n                }\n            })\n\n    }\n\n\n\n    onSubmit = () => {\n        let rad = document.getElementsByName('r1');\n        for (var i = 0; i < rad.length; i++) {\n            if (rad[i].checked) {\n                let cell = i + 1;\n                this.myChart.options.scales.xAxes[0].ticks.maxTicksLimit = ((this.sizeData / cell) + 1);\n                this.myChart.options.scales.yAxes[0].ticks.stepSize=rad[i].value*40;\n                this.myChart.update();\n                return 0\n            }\n        }\n    }\n    onSubmitRed = () => {\n        let cheker;\n        cheker = document.getElementById(\"checkbox1\");\n        this.get2Array(this.props.data);\n\n        if (cheker.checked) {\n            this.myChart.data.datasets[0].pointBorderColor = \"red\";\n            this.myChart.options.scales.xAxes[0].gridLines.color = \"red\";\n            this.myChart.update();\n            return 0\n        } else {\n            this.myChart.data.datasets[0].pointBorderColor = \"#D7D0D0\";\n            this.myChart.options.scales.xAxes[0].gridLines.color = \"#D7D0D0\";\n            this.myChart.update();\n            return 0\n        }\n    };\n    aproximate=(massX,massY)=>{\n\n        let n=massX.length;\n        let sumMassX=0;\n        let sumMassY=0;\n        let sumMultXonY=0;\n        let sumDoubleX=0;\n        let a=0;\n        let b=0;\n        for (let i=0;i<n;i++) sumMassX+=massX[i];\n        for (let i=0;i<n;i++) sumMassY+=massY[i];\n        for (let i=0;i<n;i++) sumMultXonY+=(massX[i]*massY[i]);\n        for (let i=0;i<n;i++) sumDoubleX+=massX[i]*massX[i];\n        sumMassX=Math.floor(sumMassX*100)/100;\n        sumMassY=Math.floor(sumMassY*100)/100;\n        sumMultXonY=Math.floor(sumMultXonY*100)/100;\n        sumDoubleX=Math.floor(sumDoubleX*100)/100;\n\n        a=(n*sumMultXonY-sumMassX*sumMassY)/(n*sumDoubleX-sumMassX*sumMassX);\n        b=(sumMassY-a*sumMassX)/n;\n        a=Math.floor(a*1000)/1000;\n        b=Math.floor(b*1000)/1000;\n        let newMassY=[];\n\n\n        let massXnew=[0.69,0.79,0.89,0.99,1.09,1.19,1.29,1.39,1.49,1.59,1.69,1.79];\n        for (let i=0;i<massXnew.length;i++) {\n            newMassY[i] = a * massXnew[i] + b;\n        };\n\n\n        let obj={\n            newMassY:newMassY,\n            ada:a,\n            bda:b,\n            massXnew:massXnew,\n        };\n        return obj;\n    };\n\n    render() {\n\n        return (<div>\n\n            <label className={\"ceil\"}>Сума для 2-клітинкових інтервалів:</label> <br/>\n            <label className={\"ceil\"}>Сума для 3-клітинкових інтервалів:</label> <br/>\n            <label className={\"ceil\"}>Сума для 4-клітинкових інтервалів:</label> <br/>\n            <label className={\"ceil\"}>Сума для 5-клітинкових інтервалів:</label> <br/>\n            <label className={\"ceil\"}>Сума для 6-клітинкових інтервалів:</label> <br/>\n            <label className={\"formula\"}>Рівняння прямої: </label> <br/>\n            <div className={\"fraktalDiv\"}>\n            <label className={\"fraktal\"}>Фрактальна розмірність: </label> <br/>\n            <label className={\"herst\"}>Показник Герста: </label> <br/>\n            <label className={\"constanta\"}> </label> <br/>\n            </div>\n            <button onClick={() => this.showSum(this.props.data)}>CALCULATE</button>\n\n\n\n           <div className={\"chartContainer\"}>\n               <div className={\"left\"}>\n            <canvas id={\"MyChart2\"} />\n               </div>\n            <div className={\"right\"}>\n            <canvas id={\"MyChartAprox\"}  />\n            </div>\n            </div>\n            <canvas ref={this.canvasRef}/>\n            <form>\n                <input name={\"r1\"} type=\"radio\" value=\"1\" onChange={this.onSubmit}/> 1\n                <input name={\"r1\"} type=\"radio\" value=\"2\" onChange={this.onSubmit}/> 2\n                <input name={\"r1\"} type=\"radio\" value=\"3\" onChange={this.onSubmit}/>3\n                <input name={\"r1\"} type=\"radio\" value=\"4\" onChange={this.onSubmit}/>4\n                <input name={\"r1\"} type=\"radio\" value=\"5\" onChange={this.onSubmit}/>5\n                <input name={\"r1\"} type=\"radio\" value=\"6\" onChange={this.onSubmit}/>6\n                <input name={\"r1\"} color={\"red\"} id=\"checkbox1\" type=\"checkbox\" value=\"4\" onClick={this.onSubmitRed}/>red\n            </form>\n\n        </div>);\n    }\n};\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n\n    }\n\n    state = {\n        feeds: getFeeds(),\n        size: getSize(),\n    }\n\n\n    render() {\n\n        return (<div>\n\n            <div className=\"App\">\n\n                <BarChart\n                    data={this.state.feeds[0].data}\n                    title={this.state.feeds[0].title}\n                    size={this.state.size}\n\n                />\n            </div>\n        </div>);\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}